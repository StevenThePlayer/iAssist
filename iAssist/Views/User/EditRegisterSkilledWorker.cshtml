@model iAssist.Models.RegisterSkilledWorker

@{
    ViewBag.Title = "EditRegisterSkilledWorker";
}

<h2>RegisterSkilledWorker</h2>

@using (Html.BeginForm("EditRegisterSkilledWorker", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Step 1: Please Fill up the form correctly</h4>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <hr />
        <div class="col-md-6">
            <div class="form-group text-center">
                @if (Model.ProfilePicture == null)
                {
                    <img class="profile-photo" src="~/image/defaultprofilepic.jpg" />
                }
                else
                {
                    <img class="profile-photo" src="@Url.Content("~/image/"+Model.ProfilePicture)" style="width:100px; height: 100px;" />
                }
                <input type="file" name="ImageFile" style="margin: auto; margin-top: 20px;" accept="image/png, image/gif, image/jpeg" size="23" />
            </div>
        </div>
        <div class="space-20"></div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Firstname)
                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lastname)
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phonenumber)
                @Html.EditorFor(model => model.Phonenumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phonenumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Overview, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Overview, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Overview, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control", } })
                    @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.JobId, new { htmlAttributes = new { @class = "form-control" } })
            <div class="form-group">
                <label class="col-md-2 control-label">
                    Select Skill / Service Offer
                </label>
                <div class="col-md-10">
                    @foreach (var item in Model.workskill)
                    {
                        <input type="checkbox" name="selectedSkills" value="@item.Text" checked="@item.Selected"
                               class="checkbox-inline" />
                        @Html.Label(item.Text, new { @class = "control-label" })
                    }
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Next" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ViewSubmittedWorker")
</div>


<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyCCnmMReV03W96lvqJVwbG7nFOTkuUDaX8"></script>
<script type="text/javascript">

    google.maps.event.addDomListener(window, 'load', function () {
        var options = {
            componentRestrictions: {country: "ph" }
        };

        var input = document.getElementById('Address');
        var places = new google.maps.places.Autocomplete(input, options);
        google.maps.event.addListener(places, 'place_changed', function () {
            var place = places.getPlace();
            $("#Longitude").val("" + place.geometry.location.lng());
            $("#Latitude").val("" + place.geometry.location.lat());
        });

    });
</script>
