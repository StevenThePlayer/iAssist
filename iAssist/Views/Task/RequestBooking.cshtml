@model iAssist.Models.TaskDetailsViewModel

@{
    ViewBag.Title = "RequestBooking";
    Model.workerid = ViewBag.id;
    Model.JobId = ViewBag.Jobid;
}
<div class="container py-3">
    <h2>RequestBooking</h2>
    <hr />
    <div class="container py-3">
        <div class="card">
            <div class="card-header" style="background-color: #e65c00;">
                <h5 style="color:white;">Request Form</h5>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("RequestBooking", "Task", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    <table class="table table-striped">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <tbody>
                            <tr>
                                <td colspan="1">
                                    <form class="well form-horizontal">
                                        <fieldset>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.JobId, htmlAttributes: new { @class = "control-label" })
                                                <div class="col-md-8 inputGroupContainer">
                                                    @Html.DropDownListFor(vm => vm.JobId, Model.JobList, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                                                    @Html.HiddenFor(m => m.JobId)
                                                    @Html.ValidationMessageFor(model => model.JobId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.TaskTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-8 inputGroupContainer">
                                                    @Html.EditorFor(model => model.TaskTitle, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.TaskTitle, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.TaskDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-8 inputGroupContainer">
                                                    @Html.TextAreaFor(model => model.TaskDesc, 10, 98, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.TaskDesc, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.taskdet_sched, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-8 inputGroupContainer">
                                                    @Html.TextBoxFor(model => model.taskdet_sched, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.taskdet_sched, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.taskdet_time, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-8 inputGroupContainer">
                                                    @Html.TextBoxFor(model => model.taskdet_time, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.taskdet_sched, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="col-md-8 inputGroupContainer">
                                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="col-md-2 control-label">
                                                    Select Service
                                                </label>
                                                <div class="col-md-10">
                                                    @foreach (var item in (SelectList)ViewBag.SkillsSelect)
                                                    {
                                                        <input type="checkbox" name="selectedSkills" value="@item.Text"
                                                               class="checkbox-inline" />
                                                        @Html.Label(item.Text, new { @class = "control-label" })
                                                    }
                                                </div>
                                            </div>
                                            @Html.HiddenFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.HiddenFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.HiddenFor(model => model.workerid, new { htmlAttributes = new { @class = "form-control" } })
                                            <div class="form-group">
                                                <div class="col-md-8 inputGroupContainer">
                                                    <input type="file" name="ImageFile" style="margin: auto; margin-top: 20px;" accept="image/png, image/gif, image/jpeg" size="23" />
                                                </div>
                                            </div>
                                            <div class="col-md-10 py-3">
                                                <div class="form-group">
                                                    <div class="col-md-offset-2 col-md-10">
                                                        <input type="submit" value="Create" class="btn btn-default" style="background-color: #e65c00; border:none; color:white;" />
                                                    </div>
                                                </div>
                                            </div>
                                        </fieldset>
                                    </form>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("View My Post Task", "ShowMyTaskPost")
</div>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyCCnmMReV03W96lvqJVwbG7nFOTkuUDaX8"></script>
<script type="text/javascript">

    google.maps.event.addDomListener(window, 'load', function () {
        var options = {
            componentRestrictions: { country: "ph" }
        };

        var input = document.getElementById('Address');
        var places = new google.maps.places.Autocomplete(input, options);
        google.maps.event.addListener(places, 'place_changed', function () {
            var place = places.getPlace();
            $("#Longitude").val("" + place.geometry.location.lng());
            $("#Latitude").val("" + place.geometry.location.lat());
        });

    });
</script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-timepicker/1.8.1/jquery.timepicker.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-timepicker/1.8.1/jquery.timepicker.min.css" type="text/css" />
<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        $("#taskdet_sched").datepicker({
            format: "dd/mm/yy",
            autoclose: true,
            todayHighlight: true,
            showOtherMonths: true,
            selectOtherMonths: true,
            autoclose: true,
            changeMonth: true,
            changeYear: true,
            minDate: -0,
        });
        $('#taskdet_time').timepicker();
    });
</script>